# Copyright The OpenTelemetry Authors
# SPDX-License-Identifier: Apache-2.0

#-------------------------------------------------------------------------
# CMAKE flags to capture the build configuration for the insalled package
#    BUILT_WITH_<dependency> is set to true if the installed package requires that dependency
# See the thirdparty-dependency-deinfitions.cmake for the supported dependency list and
# mapping to opentelemetry-cpp components.
#-------------------------------------------------------------------------

# Initialize dependency expected flags
set(BUILT_WITH_Threads TRUE)
set(BUILT_WITH_CURL FALSE)
set(BUILT_WITH_ZLIB FALSE)
set(BUILT_WITH_nlohmann_json FALSE)
set(BUILT_WITH_Protobuf FALSE)
set(BUILT_WITH_gRPC FALSE)
set(BUILT_WITH_prometheus-cpp FALSE)
set(BUILT_WITH_OpenTracing FALSE)

# CURL and ZLIB:
if(@WITH_HTTP_CLIENT_CURL@)
  if("@CURL_FOUND@")
    set(BUILT_WITH_CURL TRUE)
  endif()
  if("@ZLIB_FOUND@")
    set(BUILT_WITH_ZLIB TRUE)
  endif()
endif()

# nlohmann_json:
if("@USE_NLOHMANN_JSON@")
  set(BUILT_WITH_nlohmann_json TRUE)
endif()

# Protobuf:
# Expected TRUE if protobuf was found during the build
if("@Protobuf_FOUND@")
  set(BUILT_WITH_Protobuf TRUE)
endif()

# gRPC:
if(@WITH_OTLP_GRPC@)
  set(BUILT_WITH_gRPC TRUE)
endif()

# prometheus-cpp:
if(@WITH_PROMETHEUS@)
  set(BUILT_WITH_prometheus-cpp TRUE)
endif()

# OpenTracing:
if(@WITH_OPENTRACING@)
  set(BUILT_WITH_OpenTracing TRUE)
endif()

#-----------------------------------------------------------------------
# Third party dependency versions
#-----------------------------------------------------------------------
if(BUILT_WITH_CURL)
  set(BUILT_WITH_CURL_VERSION @CURL_VERSION@)
endif()

if(BUILT_WITH_ZLIB)
  set(BUILT_WITH_ZLIB_VERSION @ZLIB_VERSION@)
endif()

if(BUILT_WITH_nlohmann_json)
  set(BUILT_WITH_nlohmann_json_VERSION @nlohmann_json_VERSION@)
endif()

if(BUILT_WITH_Protobuf)
  set(BUILT_WITH_Protobuf_VERSION @Protobuf_VERSION@)
endif()

if(BUILT_WITH_gRPC)
  set(BUILT_WITH_gRPC_VERSION @gRPC_VERSION@)
endif()

if(BUILT_WITH_prometheus-cpp)
  set(BUILT_WITH_prometheus-cpp_VERSION @prometheus-cpp_VERSION@)
endif()

if(BUILT_WITH_OpenTracing)
  set(BUILT_WITH_OpenTracing_VERSION @OpenTracing_VERSION@)
endif()

#-----------------------------------------------------------------------
# Flags to determine if CONFIG search mode should be used in find_dependency(...)
#-----------------------------------------------------------------------
set(FIND_DEPENDENCY_Threads_USE_CONFIG FALSE)
set(FIND_DEPENDENCY_ZLIB_USE_CONFIG FALSE)
set(FIND_DEPENDENCY_CURL_USE_CONFIG FALSE)
set(FIND_DEPENDENCY_nlohmann_json_USE_CONFIG TRUE)
set(FIND_DEPENDENCY_gRPC_USE_CONFIG TRUE)
set(FIND_DEPENDENCY_prometheus-cpp_USE_CONFIG TRUE)
set(FIND_DEPENDENCY_OpenTracing_USE_CONFIG TRUE)

if(DEFINED BUILT_WITH_Protobuf_VERSION AND BUILT_WITH_Protobuf_VERSION VERSION_GREATER_EQUAL 3.22.0)
    set(FIND_DEPENDENCY_Protobuf_USE_CONFIG TRUE)
else()
    set(FIND_DEPENDENCY_Protobuf_USE_CONFIG FALSE)
endif()
