name: C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  cmake_test:
    name: Build with CMake, then run tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: setup
      run: |
        sudo ./ci/setup_cmake.sh 
        sudo ./ci/setup_ci_environment.sh
    - name: run tests
      run: ./ci/do_ci.sh cmake.test

  plugin_test:
    name: Statically link a plugin library, then build using CMake
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: setup
      run: |
        sudo ./ci/setup_cmake.sh 
        sudo ./ci/setup_ci_environment.sh
    - name: run tests
      run: ./ci/do_ci.sh cmake.test_example_plugin
  
  gcc_48_test:
    name: Build using legacy version of Bazel
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: setup
      run: |
        sudo ./ci/setup_ci_environment.sh 
        sudo ./ci/install_bazelisk.sh 
        sudo ./ci/install_gcc48.sh
    - name: run tests
      run: ./ci/do_ci.sh bazel.legacy.test
      
  bazel_test:
    name: Build with Bazel
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: setup
      run: |
        sudo ./ci/setup_cmake.sh 
        sudo ./ci/setup_ci_environment.sh 
        sudo ./ci/install_bazelisk.sh
    - name: run tests
      run: ./ci/do_ci.sh bazel.test

  bazel_noexcept:
    name: Build with Bazel with no-exceptions flag set
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: setup
      run: |
        sudo ./ci/setup_cmake.sh 
        sudo ./ci/setup_ci_environment.sh 
        sudo ./ci/install_bazelisk.sh
    - name: run tests
      run: ./ci/do_ci.sh bazel.noexcept

  bazel_asan:
    name: Build with Bazel with "asan" config
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: setup
      run: |
        sudo ./ci/setup_cmake.sh 
        sudo ./ci/setup_ci_environment.sh 
        sudo ./ci/install_bazelisk.sh
    - name: run tests
      run: ./ci/do_ci.sh bazel.asan

  bazel_tsan:
    name: Build with Bazel with "tsan" config
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: setup
      run: |
        sudo ./ci/setup_cmake.sh 
        sudo ./ci/setup_ci_environment.sh 
        sudo ./ci/install_bazelisk.sh
    - name: run tests
      run: ./ci/do_ci.sh bazel.tsan

  benchmark:
    name: Run benchmarks
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: setup
      run: |
        sudo ./ci/setup_cmake.sh 
        sudo ./ci/setup_ci_environment.sh 
        sudo ./ci/install_bazelisk.sh
    - name: run tests
      run: ./ci/do_ci.sh benchmark


  format:
    name: Run format tool
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: setup
      run: sudo ./ci/install_format_tools.sh
    - name: run tests
      run: ./ci/do_ci.sh format

  osx_test:
    name: Build with Bazel on MacOS runner
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: run tests
      run: ./ci/do_ci.sh bazel.test

  windows:
    name: Build with CMake, run tests, then test exporter protocol on Windows runner
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
    - name: setup
      run: |
        ./ci/setup_windows_cmake.ps1 
        ./ci/setup_windows_ci_environment.ps1 
        ./ci/install_windows_protobuf.ps1
      timeout-minutes: 15
    - name: run cmake test
      run: ./ci/do_ci.ps1 cmake.test
    - name: run otprotocol test
      run: ./ci/do_ci.sh cmake.exporter.otprotocol.test

  windows_bazel:
    name: Build with Bazel on Windows runner
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
    - name: setup
      run: ./ci/install_windows_bazelisk.ps1
    - name: run tests
      run: ./ci/do_ci.ps1 bazel.build

  windows_plugin_test:
    name: Statically link a plugin library, then build using CMake on Windows runner
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v2
    - name: setup
      run: |
        ./ci/setup_windows_cmake.ps1 
        ./ci/setup_windows_ci_environment.ps1
    - name: run tests
      run: ./ci/do_ci.ps1 cmake.test_example_plugin

   
